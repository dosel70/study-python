매직 메소드
    클래스 안에 재정의 할 수 있는 스페셜 메소드이다.

+   __add__(self, other)
-   __sub__(self, other)
*   __mul__(self,other)
/   __truediv__(self, other)
//  __floordiv__(self, other)
%   __mod__(self, other)
**  __pow__(self, other[, modulo])

인덱스 연산자     __getitem__(self, index)

멤버 확인       __contains__(self, value)

요소 길이   __len__(self)

문자열 표현 __str__(self)

생성자 __init__

소멸자 __del__

할당자 __new__

__repr__(self) >> __str__을 정의 하지 않을 경우 ,  __repr__이 대신 쓰인다.


# # ClassMethod , StaticMethod
# # 클래스메소드 : 예를 들어 클래스에서 self를 받지 않고 따로 cls 를 쓰며, 클래스에 직접 접근하거나, 인스턴스 변수를
# # 변경하고 싶을 때, 반면 스태틱메소드 같은 경우에는 정적 메소드이며, 암묵적으로 받는 특정매개변수(self...)를 받지 않으며, 필요하지가 않다.
#
# # 정적 메서드, 클래스메서드 를 살펴보기 전에 가장 기본이 되는 인스턴스 메서드에 대해서 짚고 넘어가자.
# # 클래스에서 아무 데코레이터 없이 메서드를 선언하면 해당 메서드는 인스턴스 메서드로 취급이 되며, 첫번째 매개 변수로 클래스의 인스턴스가
# # 넘어오게 된다. 이 첫번째 매개변수의 이름은 보통 관행적으로 self라고 하며, 인스턴스 메서드는 이 self를 통해 인스턴스 속성에 접근하거나 다른 이스턴스 메서드를
# # 호출 할 수 있습니다. 뿐만 아니라 self를 통해, 클래스 속성에 접근하거나 클래스 메서드를 호출할 수 도 있습니다.
# # 클래스 메서드 : 데코레이터를 사용해서 클래스에 메서드를 선언함녀 해당 메서드는 클래스 메서드가 되며, 첫번째 매개 변수로 클래스 인스턴스가 아니라 클래스
# # 자체가 넘어오게 되면서 이 첫번째 매개 변수의 이름은 보통 관행적으로 cls 라고 하며 ㅡ클래스 메서드는 이 cls를 통해 클래스 속성에 접근하거나
# # 클래스 메서드를 호출 할수 있따. 하지만, 인스턴스 메서드오 ㅏ달리 인스턴스 속성에 접근하거나 다른 인스턴스 메서드를 호출하는 것은 불가능
#
# class User:
#     def __init__(self,email,password):
#         self.email = email
#         self.password = password
#     @classmethod
#     def fromTuple(cls,tup):
#         return cls(tup[0], tup[1])
#     @classmethod
#     def fromEmail(cls,dic):
#         return cls(dic["email"],dic["password"])
#
# user = User.fromTuple("dosel70@atest.com","andy")
# print(user)

