버전 관리 시스템
   원하는 시점(버전)으로 이동할 수 있으며, 각 버전별로 여러
   개발자가 협업할 수 잇는 최적의 환경을 제공하는 시스템
SVN
   작업 내역 커밋 시 변경사항과 히스토리가 즉시 서버로 전송되기 때문에 관리가 용이하다.
   또한 간단한 설치와 사용방법으로 별도의 교육 없이도 초보자도 쉽게 사용할 수 있다.
   하지만 항상 원격 저장소(SVN 서버)를 필요로 하며, 서버간 버전 관리도 힘들다.

Git(분산형 버전 관리 시스템)
   SVN이 가지고 있던 클라이언트와 서버 간의 버전 관리 문제를 많이 보완해준 시스템이다.
   서버 뿐만 아니라 로컬에서도 버전 관리가 가능하다.
   로컬이 서버가 될 수 있고, 반대로 서버가 로컬이 될 수 있다.
   브랜치라는 개념을 사용하여 개발자 마음대로 로컬 환경에서도 커밋과 버전 관리가 가능하다.
--------------------------------------------------------------------------------------------------------------------------
git init
git add .
git status
git commit -m "메세지"
git log --pretty=oneline
git checkout [커밋 아이디 또는 브랜치명]
git checkout -b [브랜치명]
git branch
git branch -d [브랜치명]
git merge [브랜치명]
git remote add [원격 저장소 이름] [서버 경로]
git remote -v
git remote remove [원격 저장소 이름]
git push [원격 저장소 이름] [원격 저장소 브랜치명]
